// triangle 三角箭头
// 可采用空元素或伪元素生成，具体定位这里不涉及
%triangle-basic {
    position:absolute;
    content: "";
    height: 0;
    width: 0;
    line-height: 0;
    font-size: 0;
    overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: #ccc) {
    @extend %triangle-basic;
    @if $direction == top {
        border-top: $borderWidth solid $borderColor;
        border-left: $borderWidth solid transparent;
        border-right: $borderWidth solid transparent;
    }
    @else if $direction == right {
        border-right: $borderWidth solid $borderColor;
        border-top: $borderWidth solid transparent;
        border-bottom: $borderWidth solid transparent;
    }
    @else if $direction == bottom {
        border-bottom: $borderWidth solid $borderColor;
        border-left: $borderWidth solid transparent;
        border-right: $borderWidth solid transparent;
    }
    @else if $direction == left {
        border-left: $borderWidth solid $borderColor;
        border-top: $borderWidth solid transparent;
        border-bottom: $borderWidth solid transparent;
    }
}


//设置按钮
@mixin button($fontSize: 16px,$color: #fff,$bgColor: #ec584e,$radius:5px){
    position: relative;
    display: block;
    padding-left: 10px;
    padding-right: 10px;
    box-sizing: border-box;
    font-size: $fontSize;
    text-align: center;
    line-height: 2.33333333;
    border-radius: 5px;
    overflow: hidden;
    color:$color;
    background: $bgColor;
}
//单行隐藏
@mixin ellipsis($lines: 1) {
    @if $lines != 1 {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }@else {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

// transition
@mixin transition($property:all,$duration:0.5s,$timing:ease){
    -webkit-transition:$property $duration $timing;
    -moz-transition:$property $duration $timing;
    -ms-transition:$property $duration $timing;
    -o-transition:$property $duration $timing;
    transition:$property $duration $timing;
}
// more transitions
@mixin transitions($property:all){
    -webkit-transition:$property;
    -moz-transition:$property;
    -ms-transition:$property;
    -o-transition:$property;
    transition:$property;
}
//背景
@mixin bgcolor($opacity:30){
  background:rgba(0,0,0,$opacity/100);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#35000000', endColorstr='#35000000');
}


//伸缩盒
@mixin flexbox{
    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex; 
}

@mixin flex($count:1){
    -webkit-box-flex: $count;      /* OLD - iOS 6-, Safari 3.1-6 */
    -moz-box-flex: $count;         /* OLD - Firefox 19- */
    -webkit-flex: $count;          /* Chrome */
    -ms-flex: $count;              /* IE 10 */
    flex: $count;
}

@mixin boxshadow($hshadow:0, $vshadow:0, $blur:10px, $spread:10px, $color:#000, $inset:inset ){
    @if $inset != inset {
        -webkit-box-shadow: $hshadow $vshadow $blur $spread $color $inset;
        -moz-box-shadow: $hshadow $vshadow $blur $spread $color $inset;
        -ms-box-shadow: $hshadow $vshadow $blur $spread $color $inset;
        -o-box-shadow: $hshadow $vshadow $blur $spread $color $inset;
        box-shadow: $hshadow $vshadow $blur $spread $color $inset;
    }@else{
        -webkit-box-shadow: $hshadow $vshadow $blur $spread $color;
        -moz-box-shadow: $hshadow $vshadow $blur $spread $color;
        -ms-box-shadow: $hshadow $vshadow $blur $spread $color;
        -o-box-shadow: $hshadow $vshadow $blur $spread $color;
        box-shadow: $hshadow $vshadow $blur $spread $color;
    }
}
//渐变参数：startColorStr起始颜色 endColorStr结束颜色 gradientType为0时代表垂直，为1时代表水平
@mixin gradient($gradientType:0,$startColor:#000000,$endColor:#ffffff){
    @if $gradientType == 0{
        filter: progid:DXImageTransform.Microsoft.Gradient(startColorStr="#000000",endColorStr='#ffffff',gradientType="0");
        /*background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($startColor), to($endColor));*/
        background: -moz-linear-gradient(bottom, $startColor, $endColor);
        background: -ms-linear-gradient(bottom, $startColor, $endColor);
        background: -o-linear-gradient(bottom,$startColor, $endColor);
        background: linear-gradient(to bottom,$startColor, $endColor); 
    }@else{
       filter: progid:DXImageTransform.Microsoft.Gradient(startColorStr="#000000",endColorStr='#ffffff',gradientType="1");
        /*background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($startColor), to($endColor));*/
        background: -moz-linear-gradient(right, $startColor, $endColor);
        background: -ms-linear-gradient(right, $startColor, $endColor);
        background: -o-linear-gradient(right,$startColor, $endColor);
        background: linear-gradient(to right,$startColor, $endColor);
    }

}

@mixin transform($val){
    -webkit-transform: $val;
    -moz-transform: $val;
    -ms-transform: $val;
    -o-transform: $val;
    transform: $val;
}

@mixin transform-origin($Xaxis,$Yaxis){
    -webkit-transform-origin: $Xaxis $Yaxis;
    -moz-transform-origin: $Xaxis $Yaxis;
    -ms-transform-origin: $Xaxis $Yaxis;
    -o-transform-origin: $Xaxis $Yaxis;
    transform-origin: $Xaxis $Yaxis;
}